package aoc2024.day8

import aoc2024.Coord
import aoc2024.Grid2d
import aoc2024.Vect

fun main() {
    val grid = Grid2d<Char>()
    actualInput.let { data ->
        data.forEachIndexed { y, line ->
            line.forEachIndexed { x, char ->
                grid[Coord(x, y)] = char
            }
        }
    }

    part1(grid) // 291
}

fun part1(grid: Grid2d<Char>) {
    val types = grid.getUniqueValues().filter { it != '.' }.toSet()
    val antinodes = mutableSetOf<Coord>()

    fun dist(c1: Coord, c2: Coord): Vect = Vect(c2.x - c1.x, c2.y - c1.y)

    types.forEach { type ->
        val coords = grid.getCoords()
        val antennas = coords.filter { grid[it] == type }

        coords.forEach { c ->
            antennas.forEach { a ->
                val d1 = dist(c, a)
                val match = antennas.filter { it != a }
                    .any { dist(c, it) == d1 * 2 }
                if (match) {
                    antinodes.add(c)
                }
            }
        }
    }
    println(antinodes.size)
}

val testInput = """
    ............
    ........0...
    .....0......
    .......0....
    ....0.......
    ......A.....
    ............
    ............
    ........A...
    .........A..
    ............
    ............
""".trimIndent().lines()

val actualInput = """
    ...d............................J.................
    ......e.............................J.............
    ..........6............7..........................
    ........................P7........................
    ..................................................
    .........6........................................
    e..........................x.................E....
    ...G...A.......d...........................o......
    .....A.e...........................J......8.......
    ................6....9.....J.............E.8......
    ..........d.9.........7..K....E...................
    ...e.....U....9................x..K...............
    ......A......O...........P................o.......
    ......................x..................M..E.....
    ........................x........p................
    ........A..................O......................
    .......r.f....O.......P9..G.........m.............
    u...df..r...............7.........................
    .....g.............nXu......N.........K...........
    ..............l..........0..............p.........
    .......lu...................p......o..............
    ....g..........l........0p..G.....F...............
    .....................................8......F.....
    ...................................C..............
    ....3................G0......................M....
    2...f....g..........3........P......O......F......
    g......3.....0....H......................F..M.....
    .............c................m...h.....M.........
    ...........2....l.................................
    ..U...c......2...........................K........
    .D....................r.....f.....................
    ....................N.............................
    .U..............h.................................
    ...a.............u..............C.................
    c...Uj....a..6...H...................R............
    ...3....j................H...............m........
    .......................5.......C..........4....m..
    ......................H.........R......N....X.....
    .........h..2.................R................N..
    .......................r...........q...n..........
    .....c..............5.............................
    ..a..h....D.................................n.....
    ......qk..................D............1.....X....
    .k..................................q.............
    ..k..........a.............L................1....4
    ......k..........RQ..5.L.j..1..................4..
    ..................................................
    ..............L.....................oX............
    ........Q.............L.........n.................
    ...........Q.D........5..........1............4...
""".trimIndent().lines()